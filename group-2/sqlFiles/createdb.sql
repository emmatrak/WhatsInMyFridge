DROP DATABASE IF EXISTS wif_data;
CREATE DATABASE wif_data;
USE wif_data;

-- Create the recipes table to store all of our recipes
CREATE TABLE recipeList(
	recipeID INT NOT NULL AUTO_INCREMENT,
	recipeLink VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY (recipeID)
);

-- Create the ingredient table to store all of the ingredients
CREATE TABLE ingredientList(
	ingredientID INT NOT NULL AUTO_INCREMENT,
	ingredientName VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY (ingredientID)
);

-- Create the many-to-many table for recipes to ingredients
CREATE TABLE recipeMatch(
	recipeID INT,
	ingredientID INT,
	PRIMARY KEY (recipeID, ingredientID),
	FOREIGN KEY (recipeID) REFERENCES recipeList(recipeID),
	FOREIGN KEY (ingredientID) REFERENCES ingredientList(ingredientID)
);

-- creates the table that stores all of the difference cooking devices
CREATE TABLE deviceList(
	deviceID INT NOT NULL AUTO_INCREMENT,
	deviceName CHAR(10),
	PRIMARY KEY (deviceID)
);

-- creates the many-to-many table that matches all of the recipes to the devices that cook them
CREATE TABLE deviceMatch(
	recipeID INT,
	deviceID INT,
	PRIMARY KEY (recipeID, deviceID),
	FOREIGN KEY (deviceID) REFERENCES deviceList(deviceID),
	FOREIGN KEY (recipeID) REFERENCES recipeList(recipeID)
);

-- creates the table that names all of the diets
CREATE TABLE dietList(
	dietID INT NOT NULL AUTO_INCREMENT,
	dietName CHAR(20),
	PRIMARY KEY (dietID)
);

-- creates the many-to-many table that matches all of the recipes to the different diets they fit
CREATE TABLE dietMatch(
	recipeID INT,
	dietID INT,
	PRIMARY KEY (recipeID, dietID),
	FOREIGN KEY (dietID) REFERENCES dietList(dietID),
	FOREIGN KEY (recipeID) REFERENCES recipeList(recipeID)
);

-- populates the recipe table
INSERT INTO recipeList (recipeID, recipeLink)
VALUES
(1, 'appleNacho.html'),
(2, 'baked_potato.html'),
(3, 'banana_pancake.html'),
(4, 'cauliStirFry.html'),
(5, 'cheese_noodles.html'),
(6, 'chickfry.html'),
(7, 'chickpeaSalad.html'),
(8, 'cinnamonSugarChips.html'),
(9, 'cookieDough.html'),
(10, 'eggScarmbleVeg.html'),
(11, 'greekYogurt.html'),
(12, 'grilled_cheese.html'),
(13, 'honey_butter_toast.html'),
(14, 'iceCreamB.html'),
(15, 'mac_and_cheese.html'),
(16, 'mugBrownie.html'),
(17, 'mugCake.html'),
(18, 'oatmeal.html'),
(19, 'pot_pie.html'),
(20, 'quesadilla_nachos.html'),
(21, 'ramen_upgrade.html'),
(22, 'riceKrispie.html'),
(23, 'smores.html'),
(24, 'soup.html'),
(25, 'tomato_soup.html'),
(26, 'tunaSaladWrap.html'),
(27, 'veggieStirFry.html'),
(29, 'zuchNoodles.html');

-- populates the ingredient table
INSERT INTO ingredientList (ingredientName) VALUES
	('Eggs'),
	('Chicken'),
	('Tuna'),
	('Salmon'),
	('Yogurt'),
	('Tofu'),
	('Meat-sliced'),
	('Lentils'),
	('nut-butter'),
	('nuts'),
	('Spinach'),
	('Peppers'),
	('Onions'),
	('Lettuce'),
	('Cucumbers'),
	('Tomatoes'),
	('Zucchini'),
	('Garlic'),
	('Carrot'),
	('Celery'),
	('Mixed-Vegetables'),
	('Parsley'),
	('Basil'),
	('Peas'),
	('Califlower'),
	('Califlower-Rice'),
	('chick-peas'),
	('potato'),
	('Lemon'),
	('Banana'),
	('Strawberries'),
	('Apples'),
	('Berries'),
	('oats'),
	('flour'),
	('rice-krispies'),
	('graham-cracker'),
	('granola'),
	('quinoa'),
	('Rice'),
	('bread'),
	('tortilla'),
	('instant-ramen'),
	('pasta'),
	('pie-crust'),
	('Almond-milk'),
	('Milk'),
	('Cottage-cheese'),
	('Cheese'),
	('Butter'),
	('Cream'),
	('olive-oil'),
	('vegetable-oil'),
	('soy-sauce'),
	('mayo'),
	('marinara-sauce'),
	('mustard'),
	('sugar'),
	('Coco-powder'),
	('Chocolate'),
	('Honey'),
	('Marshmellow'),
	('Vegetable-broth'),
	('Chicken-broth'),
	('Baking-powder'),
	('Cornstarch'),
	('Cinnamon'),
	('Garlic-powder'),
	('Paprika');

-- populate the device table
INSERT INTO deviceList (deviceName) VALUES
('oven'),
('stove'),
('hot-plate'),
('microwave'),
('air-fryer'),
('nothing');

-- populate the diet list
INSERT INTO dietList (dietName) VALUES
('vegan'),
('vegetarian'),
('low-calorie'),
('high-protein'),
('gluten-free'),
('dairy-free'),
('nut-free'),
('comfort-food');

-- populates the recipe to ingredients match
INSERT INTO recipeMatch VALUES
	(1, 32),
	(1, 9),
	(1, 60),
	(1, 61),
	(2, 28),
	(2, 50),
	(2, 5),
	(2, 49),
	(2, 7),
	(2, 22),
	(2, 18),
	(3, 30),
	(3, 1),
	(3, 50),
	(4, 26),
	(4, 24),
	(4, 19),
	(4, 1),
	(4, 54),
	(5, 43),
	(5, 1),
	(5, 49),
	(5, 50),
	(5, 47),
	(6, 21),
	(6, 2),
	(6, 54),
	(6, 18),
	(6, 52),
	(6, 39),
	(6, 40),
	(7, 27),
	(7, 15),
	(7, 16),
	(7, 52),
	(7, 29),
	(8, 42),
	(8, 50),
	(8, 67),
	(8, 58),
	(9, 34),
	(9, 9),
	(9, 61),
	(9, 60),
	(10, 1),
	(10, 11),
	(10, 12),
	(10, 13),
	(10, 52),
	(11, 5),
	(11, 33),
	(11, 10),
	(12, 41),
	(12, 49),
	(12, 50),
	(12, 55),
	(12, 52),
	(12, 7),
	(13, 41),
	(13, 61),
	(13, 58),
	(13, 50),
	(14, 30),
	(14, 59),
	(14, 61),
	(15, 44),
	(15, 49),
	(15, 47),
	(15, 50),
	(15, 35),
	(16, 35),
	(16, 58),
	(16, 59),
	(16, 47),
	(16, 53),
	(17, 35),
	(17, 58),
	(17, 59),
	(17, 47),
	(17, 53),
	(17, 65),
	(18, 34),
	(18, 30),
	(18, 9),
	(18, 46),
	(19, 2),
	(19, 21),
	(19, 13),
	(19, 50),
	(19, 35),
	(19, 63),
	(19, 64),
	(19, 47),
	(19, 45),
	(19, 51),
	(20, 42),
	(20, 49),
	(20, 7),
	(21, 1),
	(21, 43),
	(21, 21),
	(21, 55),
	(21, 54),
	(22, 36),
	(22, 9),
	(22, 60),
	(22, 61),
	(23, 37),
	(23, 60),
	(23, 62),
	(24, 8),
	(24, 19),
	(24, 20),
	(24, 13),
	(24, 18),
	(24, 63),
	(24, 64),
	(24, 16),
	(24, 11),
	(24, 52),
	(25, 52),
	(25, 13),
	(25, 18),
	(25, 16),
	(25, 63),
	(25, 64),
	(25, 58),
	(25, 23),
	(25, 51),
	(26, 3),
	(26, 5),
	(26, 55),
	(26, 57),
	(26, 14),
	(27, 21),
	(27, 54),
	(27, 52),
	(27, 18),
	(27, 39),
	(27, 40),
	(29, 17),
	(29, 56),
	(29, 52),
	(29, 18);

-- populates the device match table
INSERT INTO deviceMatch (recipeID, deviceID)
VALUES
(1, 6),
(2, 5),
(3, 2),
(3, 3),
(4, 2),
(4, 3), 
(5, 2), 
(5, 3), 
(6, 2), 
(6, 3), 
(7, 6), 
(8, 2), 
(8, 5), 
(9, 6), 
(10, 2), 
(10, 3), 
(11, 6), 
(12, 2), 
(12, 3),
(13, 1), 
(13, 5), 
(14, 6), 
(15, 2), 
(15, 3), 
(16, 4), 
(17, 4), 
(18, 2), 
(18, 3), 
(19, 1), 
(19, 2), 
(19, 3), 
(20, 4), 
(20, 5), 
(21, 2), 
(21, 3), 
(22, 4), 
(23, 4),
(24, 2), 
(24, 3), 
(25, 2), 
(25, 3), 
(26, 6), 
(27, 2), 
(27, 3),
(29, 2),
(29, 3);

-- populates the diet match table
INSERT INTO dietMatch
VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 5),
(1, 6),
(2, 5),
(2, 8),
(3, 2),
(3, 3),
(3, 5),
(3, 6),
(3, 7),
(3, 8),
(4, 2),
(4, 3),
(4, 5),
(4, 6),
(4, 7),
(5, 2),
(5, 7),
(5, 8),
(6, 4),
(6, 6),
(6, 7),
(7, 1),
(7, 2),
(7, 3),
(7, 5),
(7, 6),
(7, 7),
(8, 2),
(8, 7),
(8, 8),
(9, 2),
(9, 5),
(9, 6),
(9, 8),
(10, 2),
(10, 3),
(10, 6),
(10, 7),
(11, 2),
(11, 3),
(11, 4),
(11, 5),
(11, 7),
(12, 2),
(12, 7),
(12, 8),
(13, 1),
(13, 2),
(13, 6),
(13, 7),
(13, 8),
(14, 2),
(14, 7),
(14, 8),
(15, 2),
(15, 7),
(15, 8),
(16, 2),
(16, 7),
(16, 8),
(17, 2),
(17, 7),
(17, 8),
(18, 1),
(18, 2),
(18, 3),
(18, 5),
(18, 7),
(19, 4),
(19, 7),
(19, 8),
(20, 2),
(20, 7),
(20, 8),
(21, 2),
(21, 3),
(21, 6),
(21, 7),
(21, 8),
(22, 2),
(22, 3),
(22, 6),
(22, 7),
(23, 2),
(23, 7),
(23, 6),
(23, 8),
(24, 1),
(24, 2),
(24, 3),
(24, 5),
(24, 6),
(24, 7),
(25, 3),
(25, 5),
(25, 6),
(25, 7),
(26, 2),
(26, 4),
(26, 6),
(26, 7),
(27, 1),
(27, 2),
(27, 3),
(27, 5),
(27, 6),
(27, 7),
(29, 1),
(29, 2),
(29, 3),
(29, 5),
(29, 6),
(29, 7);

CREATE USER 'accessUser'@'localhost' IDENTIFIED BY 'thePASSword';
CREATE USER 'loginUser'@'localhost' IDENTIFIED BY 'loginPassword';

GRANT SELECT ON wif_data.* TO 'accessUser'@'localhost';
GRANT SELECT, INSERT ON wif_data.* TO 'loginUser'@'localhost';

FLUSH PRIVILEGES;
